#!/usr/bin/env python3
import subprocess
import sys
import os

def build_payload(lhost, lport, output, advanced=False):
    # أمر بناء gradle
    build_cmd = ['./gradlew', 'assembleDebug']  # أو أي تاسك بناء تحتاجه
    if advanced:
        build_cmd.append('-Padvanced=true')

    print(f"[*] Starting build with: {' '.join(build_cmd)}")

    # تشغيل الأمر داخل مجلد templates
    result = subprocess.run(build_cmd, cwd="templates", stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

    if result.returncode != 0:
        print("[✗] Build failed!")
        print(result.stderr)
        sys.exit(1)

    print("[✓] Build succeeded!")
    # هنا ممكن تضيف أوامر إضافية لتعديل البايلود أو نسخه للمسار output

def main():
    if len(sys.argv) < 5:
        print("Usage: ./Monitor <type> LHOST=<ip> LPORT=<port> <output.apk>")
        sys.exit(1)

    cmd = sys.argv[1]
    lhost = None
    lport = None
    output = None
    advanced = False

    for arg in sys.argv[2:]:
        if arg.startswith("LHOST="):
            lhost = arg.split("=",1)[1]
        elif arg.startswith("LPORT="):
            lport = arg.split("=",1)[1]
        else:
            output = arg

    if not lhost or not lport or not output:
        print("[!] Missing required arguments.")
        sys.exit(1)

    if "advanced" in cmd:
        advanced = True

    build_payload(lhost, lport, output, advanced)

if __name__ == "__main__":
    main()
